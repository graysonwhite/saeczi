// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// dom_preds_calc
SEXP dom_preds_calc(const Eigen::MatrixXd& beta_lm, const Eigen::MatrixXd& beta_glm, const int J, const Eigen::MatrixXd& u_lm, const Eigen::MatrixXd& u_glm, const Rcpp::List& design_mats);
RcppExport SEXP _saeczi_dom_preds_calc(SEXP beta_lmSEXP, SEXP beta_glmSEXP, SEXP JSEXP, SEXP u_lmSEXP, SEXP u_glmSEXP, SEXP design_matsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type beta_lm(beta_lmSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type beta_glm(beta_glmSEXP);
    Rcpp::traits::input_parameter< const int >::type J(JSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type u_lm(u_lmSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type u_glm(u_glmSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type design_mats(design_matsSEXP);
    rcpp_result_gen = Rcpp::wrap(dom_preds_calc(beta_lm, beta_glm, J, u_lm, u_glm, design_mats));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_saeczi_dom_preds_calc", (DL_FUNC) &_saeczi_dom_preds_calc, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_saeczi(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
